---
title: "Treatment Effect Estimation"
format: html
editor: visual
---

```{r}
#| label: libraries

library(tidyverse)
library(here)
library(haven)
```

This dataset contains the CHOICES 51 participants and their corresponding treatment

```{r}
enroll_choices <- read_csv(
  here("Data", "CHOICES", "RCT", "ENROLL.csv")
)
```

This dataset contains the Drug and Alcohol Use Data from the RCT (ASD)

```{r}
asd_choices <- read_csv(
  here("Data", "CHOICES", "RCT", "ASD.csv")
)
```

## Treatment Effect Estimation for Alcohol Use

Treatment Effect Dataset

```{r}
treatment_data <- asd_choices |>
  inner_join(enroll_choices, by = c("PROT", "PATID", "SITE", "RANDDT")) 

treatment_data|>
  group_by(PATID) |>
  count()
```

Treatment Effect Estimation

```{r}
# Using t-test here but want to officially use rank based test

t.test(ADALA30D ~ TRTTRUE, data = treatment_data)
```

## Archive

This dataset contains the CHOICES lab.

```{r}
lab_choices <- read_csv(
  here("Data", "CHOICES", "RCT", "LAB.csv")
)

lab_choices <- lab_choices |>
  inner_join(enroll_choices, by = c("PROT", "PATID", "SITE", "RANDDT")) |>
  select(names(lab_choices))
```

Creating new dataset for response variable

```{r}
# CD4

week_0 <- treatment_data %>% filter(VISNO == "00") %>% select(PATID, CD4_0 = LACD4CNT)
week_16 <- treatment_data %>% filter(VISNO == "16") %>% select(PATID, CD4_16 = LACD4CNT)

response_vars <- week_0 %>%
  inner_join(week_16, by = "PATID") %>%
  mutate(CD4_CHANGE = CD4_16 - CD4_0) %>%
  select(PATID, CD4_CHANGE)
```

```{r}
full_data <- response_vars |>
  inner_join(enroll_choices, by = c("PATID")) 
```

Treatment Effect Estimation

```{r}
t.test(CD4_CHANGE ~ TRTTRUE, data = full_data) ##full data different
```

```{r}
full_data |>
  filter(TRTTRUE == "XR-NTX")
```

validation

```{r}
treatment_data |>
  filter(VISNO == "00",
         TRTTRUE == "XR-NTX") |>
  summarize(mean = mean(LACD4CNT, na.rm = TRUE))

```

## Archive of other code (4/15/25)

## Average Treatment Effect (ATE)
```{r}
myest_fun <- function(tau, residuals, Z, alpha = 0.05) {
  adj_resid <- residuals - tau * Z # will be replaced by new function
  pval <- wilcox.test(adj_resid ~ Z)$p.value
  return(pval - alpha)
}
```

```{r}
# changing treatment column to numeric
rct$Z <- ifelse(rct$TRTTRUE == "XR-NTX", 1, 0)
```


Wilcoxon Rank sum test with Pretest
```{r}
lower_bound <- uniroot(myest_fun, interval = c(-10, 0), residuals = residuals_pretest, Z = rct$Z)$root
upper_bound <- uniroot(myest_fun, interval = c(0, 10), residuals = residuals_pretest, Z = rct$Z)$root

CI_pretest <- c(lower_bound, upper_bound)
CI_pretest
```

Wilcoxon Rank sum test with all covariates (RCT)
```{r}
lower_bound <- uniroot(myest_fun, interval = c(-10, 0), residuals = rct$residuals_rf, Z = rct$Z)$root
upper_bound <- uniroot(myest_fun, interval = c(0, 10), residuals = rct$residuals_rf, Z = rct$Z)$root

CI_rf <- c(lower_bound, upper_bound)
CI_rf
```


## more archive
## Wilcoxon Rank Sum with y (No covariate Adjustment)
```{r}
wilcox.test(alcohol_16 ~ TRTTRUE,
            data = rct)
```

## Wilcoxon Rank sum test with Pretest

```{r}
model_pretest <- lm(alcohol_16 ~ alcohol_S2, 
                    data = rct)

# side note: only OK if computing residuals under assumption that tau is 0
residuals_pretest <- model_pretest$residuals 

wilcox.test(residuals_pretest ~ rct$TRTTRUE)
```

```{r}
summary(model_pretest)
```

## Wilcoxon Rank sum test with all covariates (RCT)

```{r}
set.seed(123)

model_all <- randomForest(alcohol_16 ~ alcohol_S2 + DEGENDER + DEEDUCTN_recode +
DEMARTL + MHCARDH + MHLIVRH + LANEUTRO + LAHEMGLB + LAHEMATC+ LAPLATES + LAWBC +
+ LARBC + LAAST + LAALT + VIHGTIN + VIWTLBS + VIBPSYS1 + VIBPDIS1 + DSALC12M +
DSTHC12M + DSCOC12M + TUSMK100 + TUSTRTRG + TU30DAYS,
data = rct)

rct$residuals_rf <- rct$alcohol_16 - predict(model_all, rct)

# Perform Wilcoxon Rank Sum test on residuals
wilcox.test(residuals_rf ~ TRTTRUE, data = rct)
```


```{r}
print(model_all)
```

```{r}
predictions <- predict(model_all, rct)

rss <- sum((rct$alcohol_16 - predictions)^2)  
tss <- sum((rct$alcohol_16 - mean(rct$alcohol_16))^2)  
r_squared <- 1 - (rss/tss)
r_squared

rss / 45
tss 
```